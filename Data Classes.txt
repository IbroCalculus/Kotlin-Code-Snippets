Data class, unlike ordinary class, takes care of methods like; toString, equals and hashcode.
In an ordinary class, using .equals or == between to objects of thesame class will return a false.
Also, the toString method will have to be written, whereas it is autogenerated in the data class.
A data class must contain at least one parameter.
It cannot be abstract, open, sealed or inner classes. 

Generates automatically, the equals, the toString and the hashcode methods


------------------------------- 1. Data Class -------------------------------
data class User(var fName: String, var sName: String, var age: Int)

----- In Main ----
fun main(args: Array<String>) {
    val user1 = User("Alex", "Dobbin", 23)
    val user2 = User("Alex", "Dobbin", 23)

    println(user1)			// User(fName=Alex, sName=Dobbin, age=23)
    println(user1 == user2)		// true
    println(user1.hashCode())		// 1160864837
    println(user2.hashCode())		// 1160864837

}


------------------------------- 2. Non-data Class -------------------------------

class User(var fName: String, var sName: String, var age: Int)

fun main(args: Array<String>) {
    val user1 = User("Alex", "Dobbin", 23)
    val user2 = User("Alex", "Dobbin", 23)

    println(user1)			// User@5fd0d5ae
    println(user1 == user2)		// false
    println(user1.hashCode())		// 1607521710
    println(user2.hashCode())		// 764977973

}