
    try {
        5/0

    } catch (e:ArithmeticException){  // e.g e: IndexOutOfBoundsException
        println("An Arithmetic exception was encountered, ie $e")
        e.printStackTrace()
        println(e.message)
    }

     catch (e:Exception){
         println("An exception of type $e occurred")
        e.printStackTrace()
        println(e.message)
     }

    finally {
        println("This will always run, no matter the output from the exception block")
    }


================== THROW EXCEPTION ===============

    fun validateAge(age:Int){
        if(age<18){
            throw ArithmeticException("under age")
        }else println("eligible")
    }


    println("How old are you?: \n")
    val age = readLine()!!.toInt()

    try {
        validateAge(12)
    } catch (e:Exception){
        println(e)
    }